name: Build Kernel (mrproper + noninteractive + system-dtc + vmm stub)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      android_major:
        description: "Android major version (p=Android 9, r=Android 11)"
        required: false
        default: "p"
      defconfig:
        description: "Kernel defconfig under arch/arm64/configs"
        required: false
        default: "on7xreflte_01_defconfig"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false  # prevent auto-cancel of in-progress runs
  # This avoids mid-run cancellations that look like a “stuck” configure. [web:297]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    # Safe defaults for push runs (inputs defaults only apply to workflow_dispatch)
    env:
      DEFCONFIG: ${{ github.event.inputs.defconfig || 'on7xreflte_01_defconfig' }}
      ANDROID_MAJOR: ${{ github.event.inputs.android_major || 'p' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential bc bison flex libssl-dev \
            libncurses5-dev libncursesw5-dev dwarves git \
            device-tree-compiler \
            gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi
        # Ensure toolchain, ncurses, and system dtc are installed for Kconfig and DTS. [web:227]

      - name: Kernel mrproper (source root)
        run: |
          make mrproper
        # mrproper fully cleans generated files before an out-of-tree O=out build per Kbuild. [web:203][web:195]

      - name: Configure (ARM64, non-interactive)
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          export ANDROID_MAJOR_VERSION="${ANDROID_MAJOR}"
          export CROSS_COMPILE=aarch64-linux-gnu-
          export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
          make O=out "${DEFCONFIG}"
          make O=out olddefconfig
        # olddefconfig finalizes any new symbols without prompts to keep CI non-interactive. [web:285][web:321]

      - name: Stub Samsung VMM blob (vmm.elf)
        run: |
          # Some Samsung trees .incbin("init/vmm.elf"); provide a minimal ELF header so the assembler does not fail.
          mkdir -p out/init
          printf '\177ELF' > out/init/vmm.elf
        # Samsung Exynos kernels embed the RKP/VMM image as vmm.elf; a missing file breaks assembly. [web:362][web:363]

      - name: Build (system dtc + host -fcommon + relax GCC errors)
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          export ANDROID_MAJOR_VERSION="${ANDROID_MAJOR}"
          export CROSS_COMPILE=aarch64-linux-gnu-
          export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
          # Use system dtc to avoid in-tree dtc yylloc conflicts and add -fcommon for host tools.
          # Also relax GCC’s stringop-overread and overflow to avoid false-positive -Werror stops.
          make O=out DTC=dtc HOSTCFLAGS="-fcommon" KCFLAGS="-Wno-error -Wno-stringop-overread -Wno-format-overflow" -j"$(nproc)"
          ls -al out/arch/arm64/boot || true
        # DTC=dtc selects the host device-tree-compiler and HOSTCFLAGS="-fcommon" avoids yylloc multiple-definition on older dtc sources. [web:222][web:314][web:315]  
        # KCFLAGS appends to KBUILD_CFLAGS so warnings like stringop-overread do not fail the build on old vendor trees. [web:227][web:350]

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ github.run_number }}
          if-no-files-found: warn
          path: |
            out/arch/arm64/boot/Image
            out/arch/arm64/boot/Image.gz
            out/arch/arm64/boot/Image.gz-dtb
            out/arch/arm64/boot/dts/**/*.dtb
            out/drivers/**/*.ko
        # ARM64 Android kernels typically output Image/Image.gz(/-dtb) and DT
