name: Build Kernel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout kernel source
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential bc bison flex libssl-dev \
            libncurses5-dev libncursesw5-dev dwarves git

      - name: Fetch Android GCC 4.9 toolchains (arm64 + arm32)
        run: |
          set -e
          mkdir -p toolchains
          # ARM64 toolchain (Android aarch64-linux-android-4.9)
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 toolchains/aarch64-4.9
          cd toolchains/aarch64-4.9
          # Commit with populated bin/ (adjust if your tree needs another)
          git checkout a7bb6f39cd99b2fb26ecc2d3cb984d18cd259d24
          cd ../../
          # ARM32 toolchain (Android arm-linux-androideabi-4.9)
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 toolchains/arm32-4.9
          cd toolchains/arm32-4.9
          # Commit known to contain binaries (history before cleanup)
          git checkout e9b2ab0932573a0ca90cad11ab75d9619f19c458
          cd ../../
          echo "$GITHUB_WORKSPACE/toolchains/aarch64-4.9/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/toolchains/arm32-4.9/bin"   >> $GITHUB_PATH

      - name: Print compiler versions
        run: |
          aarch64-linux-android-gcc --version || true
          arm-linux-androideabi-gcc --version || true

      - name: Configure (ARM64 defconfig)
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          # Primary 64-bit compiler
          export CROSS_COMPILE="$GITHUB_WORKSPACE/toolchains/aarch64-4.9/bin/aarch64-linux-android-"
          # 32-bit compat compiler often required by ARM64 kernel trees
          export CROSS_COMPILE_ARM32="$GITHUB_WORKSPACE/toolchains/arm32-4.9/bin/arm-linux-androideabi-"
          # Out-of-tree build directory
          make O=out on7xreflte_01_defconfig

      - name: Build
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE="$GITHUB_WORKSPACE/toolchains/aarch64-4.9/bin/aarch64-linux-android-"
          export CROSS_COMPILE_ARM32="$GITHUB_WORKSPACE/toolchains/arm32-4.9/bin/arm-linux-androideabi-"
          make O=out -j"$(nproc)"
          echo "Outputs under out/arch/arm64/boot and out/arch/arm/boot (if any):"
          ls -al out/arch/arm64/boot || true
          ls -al out/arch/arm/boot   || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ github.run_number }}
          if-no-files-found: warn
          path: |
            out/arch/arm64/boot/Image
            out/arch/arm64/boot/Image.gz
            out/arch/arm64/boot/Image.gz-dtb
            out/arch/arm64/boot/dts/**/*.dtb
            out/arch/arm/boot/zImage
            out/drivers/**/*.ko
